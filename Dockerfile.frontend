# Dockerfile para Frontend React + Vite + PWA
# Otimizado para produção com multi-stage build

# Estágio 1: Dependências
FROM node:18-alpine AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production --silent

# Estágio 2: Build do frontend
FROM node:18-alpine AS builder

# Definir diretório de trabalho
WORKDIR /app

# Copiar dependências do estágio anterior
COPY --from=deps /app/node_modules ./node_modules
COPY package*.json ./

# Copiar código fonte
COPY . .

# Build da aplicação para produção
RUN npm run build:prod

# Estágio 3: Desenvolvimento
FROM node:18-alpine AS development
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
EXPOSE 3000
CMD ["npm", "run", "dev"]

# Estágio 4: Servidor Nginx para servir arquivos estáticos
FROM nginx:alpine AS production

# Instalar dependências necessárias
RUN apk add --no-cache curl

# Copiar arquivos buildados do estágio anterior
COPY --from=builder /app/dist /usr/share/nginx/html

# Copiar configuração customizada do Nginx para frontend
COPY nginx-frontend.conf /etc/nginx/conf.d/default.conf

# Criar diretório para logs
RUN mkdir -p /var/log/nginx

# Expor porta 80
EXPOSE 80

# Health check para verificar se o servidor está funcionando
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

# Comando para iniciar o Nginx
CMD ["nginx", "-g", "daemon off;"]
